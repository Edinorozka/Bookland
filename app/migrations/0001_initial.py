# Generated by Django 2.2.28 on 2024-12-03 08:05

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('address', models.CharField(max_length=128, null=True, verbose_name='Адресс')),
                ('card_number', models.CharField(max_length=128, null=True, verbose_name='Номер карты')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique_for_date='posted', verbose_name='Заголовок')),
                ('description', models.TextField(verbose_name='Краткое описание')),
                ('content', models.TextField(verbose_name='Полный текст')),
                ('posted', models.DateTimeField(db_index=True, default=datetime.datetime(2024, 12, 3, 11, 5, 20, 608630), verbose_name='Дата публикации')),
                ('image', models.FileField(upload_to='', verbose_name='Путь к файлу')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'статья блога',
                'verbose_name_plural': 'статьи блога',
                'db_table': 'Posts',
                'ordering': ['-posted'],
            },
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('isbn', models.IntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Isbn')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('about', models.TextField(verbose_name='Краткое описание')),
                ('genre', models.CharField(max_length=100, verbose_name='Жанр книги')),
                ('posted', models.DateTimeField(verbose_name='Дата публикации')),
                ('author', models.CharField(max_length=256, verbose_name='Автор')),
                ('image', models.FileField(upload_to='', verbose_name='Фото товара')),
                ('prise', models.IntegerField(verbose_name='Цена')),
                ('number', models.IntegerField(default=0, verbose_name='Количество на складе')),
            ],
            options={
                'verbose_name': 'товар',
                'verbose_name_plural': 'товары',
                'db_table': 'Books',
            },
        ),
        migrations.CreateModel(
            name='Purchases',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(db_index=True, default=datetime.datetime(2024, 12, 3, 11, 5, 20, 609627), null=True, verbose_name='Дата заказа')),
                ('status', models.CharField(max_length=128, null=True, verbose_name='статус заказа')),
            ],
            options={
                'verbose_name': 'заказ',
                'verbose_name_plural': 'покупки',
                'db_table': 'Purchases',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='отзыв')),
                ('grade', models.IntegerField()),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Заказчик')),
                ('book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.Books', verbose_name='Заказчик')),
            ],
            options={
                'verbose_name': 'отзыв',
                'verbose_name_plural': 'отзывы',
                'db_table': 'Reviews',
            },
        ),
        migrations.CreateModel(
            name='Purchases_books',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=1)),
                ('books', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Books')),
                ('purchases', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Purchases')),
            ],
        ),
        migrations.AddField(
            model_name='purchases',
            name='books',
            field=models.ManyToManyField(through='app.Purchases_books', to='app.Books'),
        ),
        migrations.AddField(
            model_name='purchases',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Заказчик'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст коментария')),
                ('date', models.DateTimeField(db_index=True, default=datetime.datetime(2024, 12, 3, 11, 5, 20, 608630), verbose_name='Дата публикации')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.Blog', verbose_name='Статья')),
            ],
            options={
                'verbose_name': 'коментарий статьи',
                'verbose_name_plural': 'коментарии статьи',
                'db_table': 'comment',
            },
        ),
    ]
